========================================================================
FAILED TEST
Assertion #250 (A): when name doesnot exist than name is created
Expected exit code = 0; Received 1
========================================================================
FAILED TEST
Assertion #296 (A): special parameter '*' expansion with field splitting
$* with default IFS
$* with unset IFS
$* with empty IFS
Expected exit code = 10; Received 1
Standard output isn't the same as file 'sh5_296_2.eso'
diff of "out.stdout" and "sh5_296_2.eso":
*** out.stdout	Wed Jun 19 16:26:20 2019
--- sh5_296_2.eso	Wed Jun 19 16:26:20 2019
***************
*** 1,2 ****
! <1t w  o3456789t	 e
       n>
--- 1,11 ----
! <1>
! <t w  o>
! <3>
! <4>
! <5>
! <6>
! <7>
! <8>
! <9>
! <t	 e
       n>
begin$*end with default IFS
begin$*end with unset IFS
begin$*end with empty IFS
Expected exit code = 10; Received 1
Standard output isn't the same as file 'sh5_296_4.eso'
diff of "out.stdout" and "sh5_296_4.eso":
*** out.stdout	Wed Jun 19 16:26:20 2019
--- sh5_296_4.eso	Wed Jun 19 16:26:20 2019
***************
*** 1,2 ****
! <begin1t w  o3456789t	 e
       nend>
--- 1,11 ----
! <begin1>
! <t w  o>
! <3>
! <4>
! <5>
! <6>
! <7>
! <8>
! <9>
! <t	 e
       nend>
${unsetvar:-$*} with default IFS
${unsetvar:-$*} with unset IFS
${unsetvar:-$*} with empty IFS
Expected exit code = 10; Received 1
Standard output isn't the same as file 'sh5_296_2.eso'
diff of "out.stdout" and "sh5_296_2.eso":
*** out.stdout	Wed Jun 19 16:26:20 2019
--- sh5_296_2.eso	Wed Jun 19 16:26:20 2019
***************
*** 1,2 ****
! <1t w  o3456789t	 e
       n>
--- 1,11 ----
! <1>
! <t w  o>
! <3>
! <4>
! <5>
! <6>
! <7>
! <8>
! <9>
! <t	 e
       n>
${setvar+$*} with default IFS
${setvar+$*} with unset IFS
${setvar+$*} with empty IFS
Expected exit code = 10; Received 1
Standard output isn't the same as file 'sh5_296_2.eso'
diff of "out.stdout" and "sh5_296_2.eso":
*** out.stdout	Wed Jun 19 16:26:20 2019
--- sh5_296_2.eso	Wed Jun 19 16:26:20 2019
***************
*** 1,2 ****
! <1t w  o3456789t	 e
       n>
--- 1,11 ----
! <1>
! <t w  o>
! <3>
! <4>
! <5>
! <6>
! <7>
! <8>
! <9>
! <t	 e
       n>
empty fields with default IFS
empty fields with unset IFS
empty fields with empty IFS
Standard output isn't the same as file 'sh5_296_5.eso'
diff of "out.stdout" and "sh5_296_5.eso":
*** out.stdout	Wed Jun 19 16:26:20 2019
--- sh5_296_5.eso	Wed Jun 19 16:26:20 2019
***************
*** 1 ****
! <abc>
--- 1,3 ----
! <a>
! <b>
! <c>
========================================================================
FAILED TEST
Assertion #298 (A): special parameter '@' expansion with field splitting
$@ with default IFS
$@ with unset IFS
$@ with empty IFS
Expected exit code = 10; Received 1
Standard output isn't the same as file 'sh5_298_2.eso'
diff of "out.stdout" and "sh5_298_2.eso":
*** out.stdout	Wed Jun 19 16:26:21 2019
--- sh5_298_2.eso	Wed Jun 19 16:26:21 2019
***************
*** 1,2 ****
! <1t w  o3456789t	 e
       n>
--- 1,11 ----
! <1>
! <t w  o>
! <3>
! <4>
! <5>
! <6>
! <7>
! <8>
! <9>
! <t	 e
       n>
begin$@end with default IFS
begin$@end with unset IFS
begin$@end with empty IFS
Expected exit code = 10; Received 1
Standard output isn't the same as file 'sh5_298_4.eso'
diff of "out.stdout" and "sh5_298_4.eso":
*** out.stdout	Wed Jun 19 16:26:21 2019
--- sh5_298_4.eso	Wed Jun 19 16:26:21 2019
***************
*** 1,2 ****
! <begin1t w  o3456789t	 e
       nend>
--- 1,11 ----
! <begin1>
! <t w  o>
! <3>
! <4>
! <5>
! <6>
! <7>
! <8>
! <9>
! <t	 e
       nend>
${unsetvar:-$@} with default IFS
${unsetvar:-$@} with unset IFS
${unsetvar:-$@} with empty IFS
Expected exit code = 10; Received 1
Standard output isn't the same as file 'sh5_298_2.eso'
diff of "out.stdout" and "sh5_298_2.eso":
*** out.stdout	Wed Jun 19 16:26:21 2019
--- sh5_298_2.eso	Wed Jun 19 16:26:21 2019
***************
*** 1,2 ****
! <1t w  o3456789t	 e
       n>
--- 1,11 ----
! <1>
! <t w  o>
! <3>
! <4>
! <5>
! <6>
! <7>
! <8>
! <9>
! <t	 e
       n>
${setvar+$@} with default IFS
${setvar+$@} with unset IFS
${setvar+$@} with empty IFS
Expected exit code = 10; Received 1
Standard output isn't the same as file 'sh5_298_2.eso'
diff of "out.stdout" and "sh5_298_2.eso":
*** out.stdout	Wed Jun 19 16:26:21 2019
--- sh5_298_2.eso	Wed Jun 19 16:26:21 2019
***************
*** 1,2 ****
! <1t w  o3456789t	 e
       n>
--- 1,11 ----
! <1>
! <t w  o>
! <3>
! <4>
! <5>
! <6>
! <7>
! <8>
! <9>
! <t	 e
       n>
empty fields with default IFS
empty fields with unset IFS
empty fields with empty IFS
Standard output isn't the same as file 'sh5_298_5.eso'
diff of "out.stdout" and "sh5_298_5.eso":
*** out.stdout	Wed Jun 19 16:26:21 2019
--- sh5_298_5.eso	Wed Jun 19 16:26:21 2019
***************
*** 1 ****
! <abc>
--- 1,3 ----
! <a>
! <b>
! <c>
========================================================================
FAILED TEST
Assertion #352 (A): All characters within the parentheses of the command substitution expression constitute the command
Standard output isn't the same as file 'sh_352.eso'
diff of "out.stdout" and "sh_352.eso":
*** out.stdout	Wed Jun 19 16:26:26 2019
--- sh_352.eso	Wed Jun 19 16:26:26 2019
***************
*** 21,27 ****
  sh_352.19
  sh_352.20 2
  sh_352.21 bcd abc
! sh_352.22 0
  sh_352.23
  sh_352.26
  sh_352.27 ) ) )
--- 21,27 ----
  sh_352.19
  sh_352.20 2
  sh_352.21 bcd abc
! sh_352.22 99
  sh_352.23
  sh_352.26
  sh_352.27 ) ) )
========================================================================
FAILED TEST
Assertion #437 (A): When a variable assignment attempts to assign a value to a readonly
Expected exit code != 0; Received 0
Standard output isn't empty
Contents of out.stdout:
Wed Jun 19 16:26:44 BST 2019
========================================================================
FAILED TEST
Assertion #440 (A): When no command name is generated but command substitution
Standard output isn't the same as file 'test.440.eso'
diff of "out.stdout" and "test.440.eso":
*** out.stdout	Wed Jun 19 16:26:44 2019
--- test.440.eso	Wed Jun 19 16:26:44 2019
***************
*** 1 ****
! 0
--- 1 ----
! 123
========================================================================
FAILED TEST
Assertion #453 (A): The standard output of each command in a pipeline except the last is connected to the standard input of the next command
Command failed: '[ "$(cat sh8_453_out1.t)" = p ]'
Command failed: '[ "$(cat sh8_453_out2.t)" = p ]'
========================================================================
FAILED TEST
Assertion #460 (A): When ... then the standard input for an asynchronous list is redirected to a file which has the same properties as /dev/null
Standard output isn't empty
Contents of out.stdout:
This line should not be read
Command failed: 'test ! -s sh8_460.out'
========================================================================
FAILED TEST
Assertion #475 (A): A compound list in the form { list; } is executed in the curent process environment
Expected exit code = 0; Received 1
Standard output is empty
========================================================================
FAILED TEST
Assertion #520 (A): SIGINT and SIGQUIT in an asynchronous list (without -m)
Expected exit code = 0; Received 1
Standard error isn't empty
Contents of out.stderr:
second subshell exit status was 0, expected >= 128
Standard output isn't the same as file 'test.520.exp'
diff of "out.stdout" and "test.520.exp":
*** out.stdout	Wed Jun 19 16:27:33 2019
--- test.520.exp	Wed Jun 19 16:27:28 2019
***************
*** 1 ****
--- 1,2 ----
+ got SIGINT
  sending SIGQUIT
========================================================================
FAILED TEST
Assertion #597 (A): When a shell application is not executing a 'for', 'while' or 'until'
Expected exit code = 0; Received 2
Standard error isn't empty
Contents of out.stderr:
break: not in a loop
Standard output isn't the same as file 'test.597.exp'
diff of "out.stdout" and "test.597.exp":
*** out.stdout	Wed Jun 19 16:27:35 2019
--- test.597.exp	Wed Jun 19 16:27:35 2019
***************
*** 0 ****
--- 1 ----
+ value
========================================================================
FAILED TEST
Assertion #600 (A): The exit value from a call to 'break' is zero when the optional argument 'n' is an unsigned decimal integer greater than or equal to one.
Expected exit code = 0; Received 2
Contents of out.stderr:
break: not in a loop
Expected exit code = 0; Received 2
Contents of out.stderr:
break: not in a loop
========================================================================
FAILED TEST
Assertion #601 (A): A variable assignment specified with a special built-in command
Expected exit code = 0; Received 2
Standard error isn't empty
Contents of out.stderr:
break: not in a loop
Standard output isn't the same as file 'test.601.exp'
diff of "out.stdout" and "test.601.exp":
*** out.stdout	Wed Jun 19 16:27:35 2019
--- test.601.exp	Wed Jun 19 16:27:35 2019
***************
*** 0 ****
--- 1 ----
+ 20
========================================================================
FAILED TEST
Assertion #607 (A): The exit value from a call to 'continue' is zero when the optional argument 'n' is an unsigned decimal integer greater than or equal to one.
Expected exit code = 0; Received 2
Contents of out.stderr:
continue: not in a loop
Expected exit code = 0; Received 2
Contents of out.stderr:
continue: not in a loop
========================================================================
FAILED TEST
Assertion #608 (A): A variable assignment specified with a special built-in command
Expected exit code = 0; Received 2
Standard error isn't empty
Contents of out.stderr:
continue: not in a loop
Standard output isn't the same as file 'test.608.exp'
diff of "out.stdout" and "test.608.exp":
*** out.stdout	Wed Jun 19 16:27:35 2019
--- test.608.exp	Wed Jun 19 16:27:35 2019
***************
*** 0 ****
--- 1 ----
+ 20
========================================================================
FAILED TEST
Assertion #691 (A): When the shell is not executing interactively, then the 'set -u'
testing simple $var expansion ...
testing positional parameter expansion ...
testing expansion inside another parameter expansion ...
testing expansion inside an arithmetic expansion ...
testing use without $ in an arithmetic expansion ...
Expected exit code != 0; Received 0
Standard output isn't empty
Contents of out.stdout:
1
Standard error is empty
testing ${#var} expansion ...
testing ${var%word} expansion ...
testing ${var%%word} expansion ...
testing ${var#word} expansion ...
testing ${var##word} expansion ...
testing $* and $@ expansion ...
========================================================================
FAILED TEST
Assertion #699 (A): When the 'set' command is called with the single argument '-',
Command failed: '[ $(grep 'echo hello' out.stderr | wc -l) -eq 0 ]'
========================================================================
FAILED TEST
Assertion #709 (A): shift with 'n' greater than $# or (for some test modes) invalid
Expected exit code = 0; Received 1
Standard error isn't empty
Contents of out.stderr:
expect_after: unexpected timeout
Expected exit code = 0; Received 1
Standard error isn't empty
Contents of out.stderr:
expect_after: unexpected timeout
========================================================================
FAILED TEST
Assertion #718 (A): When the condition specifies a signal name without the SIG prefix
Expected exit code = 0; Received 1
Standard error isn't empty
Contents of out.stderr:
expect_after: unexpected timeout
Command failed: '[ -f tmp_718_1.tch ]'
========================================================================
FAILED TEST
Assertion #722 (C): If the implementation supports numeric signal numbers, then the
Standard error isn't empty
Contents of out.stderr:
trap: SIGKILL cannot be trapped
trap: SIGKILL cannot be trapped
Standard error isn't empty
Contents of out.stderr:
trap: SIGKILL cannot be trapped
trap: SIGKILL cannot be trapped
trap: SIGKILL cannot be trapped
========================================================================
FAILED TEST
Assertion #740 (A): set -u in an interactive shell when it tries to expand a parameter that is not set
Standard output isn't the same as file 'test.740.exp'
diff of "out.stdout" and "test.740.exp":
*** out.stdout	Wed Jun 19 16:28:47 2019
--- test.740.exp	Wed Jun 19 16:28:16 2019
***************
*** 1,5 ****
  start
- 1
- use without $ inside arithmetic: exit status 0
  thirdarg
  end reached
--- 1,3 ----
Command failed: 'test -s test.740.use_without_dollar_in_arithmetic.err'
========================================================================
FAILED TEST
Assertion #755 (A): exit in a subshell environment
Standard output isn't the same as file 'test.755.exp'
diff of "out.stdout" and "test.755.exp":
*** out.stdout	Wed Jun 19 16:28:47 2019
--- test.755.exp	Wed Jun 19 16:28:47 2019
***************
*** 1,3 ****
  23
! 0
  67
--- 1,3 ----
  23
! 45
  67
========================================================================
UNRESOLVED TEST
Assertion #825 (A): LANG determines default locale
Parameter VSC_NONENGLISH_LOCALE is set to "undefined" but the localedef utility is supported
========================================================================
UNRESOLVED TEST
Assertion #828 (A): LC_ALL overrides all other i18n variables
Parameter VSC_NONENGLISH_LOCALE is set to "undefined" but the localedef utility is supported
========================================================================
UNRESOLVED TEST
Assertion #829 (A): When the environment variable LC_COLLATE is set to a valid value
Parameter VSC_NONENGLISH_LOCALE is set to "undefined" but the localedef utility is supported
========================================================================
UNRESOLVED TEST
Assertion #830 (A): When the environment variable LC_CTYPE is set to a valid value
Parameter VSC_NONENGLISH_LOCALE is set to "undefined" but the localedef utility is supported
========================================================================
 494 tests:
 396         passed
  22         failed
  31       untested
   4     unresolved
  40    unsupported
   1     not in use
   0   other status
